@page "/sample-inquire"
@using System.Diagnostics.CodeAnalysis;
@using DataManager.Database.Data;

<h3>样品数据查询</h3>
<p></p>
<div>
    <GroupBox Title="搜索条件">
        <StandardDataSearch QueryClick="@OnQueryDataAsync"/>
    </GroupBox>
</div>
<p></p>
<div>
    <Table TItem="DynamicObject" DynamicContext="DataTableDynamicContext"
        IsMultipleSelect="true" IsBordered="false" IsStriped="true"
        ShowToolbar="true" ShowExtendButtons="false" ShowSearch="true" SearchMode="SearchMode.Top">
        <CustomerSearchTemplate>
        </CustomerSearchTemplate>
    </Table>
</div>

@code 
{
    private ITableSearchModel CustomerSearchModel { get; set; } = new StandardDataSearchModel();

    [NotNull]
    private DataTableDynamicContext? DataTableDynamicContext { get; set; }

    public DateTimeRangeValue? SearchDate { get; set; }

    private DataTableDynamicContext InitTable()
    {
        var myList=StandDataList.CreateSampleList();
        DataTableDynamicContext result = new DataTableDynamicContext(myList.GetDataTeble());
        return result;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        DataTableDynamicContext = InitTable();
    }

    private Task OnQueryDataAsync()
    {
        return Task.CompletedTask;
    }

    private Task<QueryData<SpectrumInquireItem>> OnQueryAsync(QueryPageOptions options)
    {
        // 自定义了 SearchModel
        IEnumerable<SpectrumInquireItem> items = options.CustomerSearches.Any() ? SpectrumInquireItem.Inquire(options.CustomerSearches) : SpectrumInquireItem.Inquire();

        // 设置记录总数
        var total = items.Count();
        var isAdvanceSearch = options.CustomerSearches.Any();
        // 内存分页
        items = items.Skip((options.PageIndex - 1) * options.PageItems).Take(options.PageItems).ToList();

        return Task.FromResult(new QueryData<SpectrumInquireItem>()
            {
                Items = items,
                TotalCount = total,
                IsSorted = true,
                IsFiltered = true,
                IsSearch = true,
                IsAdvanceSearch = isAdvanceSearch
            });
    }
}