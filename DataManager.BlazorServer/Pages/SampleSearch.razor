@using System.Diagnostics.CodeAnalysis;
@using DataManager.Database.Data;

<div class="row form-inline g-3">
    <div class="col-12 col-sm-4">
        <Select @bind-Value="Value.WorkPosition" Items="@WorkPositions" ShowLabel="true" DisplayText="设备名:" />
    </div>
    <div class="col-12 col-sm-4">
        <AutoComplete Items="LastedDays" OnSelectedItemChanged="OnSelectedItemChanged" @bind-Value="SelectDay" ShowLabel="true" DisplayText="最近:" IsSelectAllTextOnFocus="true"/>
    </div>
    <div class="col-12 col-sm-4">
        <Button  ShowLabel="true" OnClick="OnClick"> 查询 </Button>
    </div>
</div>

@code
{
    public List<SelectedItem> WorkPositions { get; set; } = new();

    protected override Task OnInitializedAsync()
    {
        WorkPositions = SqliteDatabase.GetInstance().TableDictionaryItemList.Select(t => new SelectedItem(t.TableName, t.WorkPosition)).ToList();
        return base.OnInitializedAsync();
    }

    private Task OnSelectedItemChanged(string val)
    {
        Dictionary<string, int> keyValuePairs = new Dictionary<string, int>()
        {
            {"1天",1},
            {"3天",3},
            {"7天",7 },
            {"15天",15},
            {"3个月",90},
            {"6个月",180},
            {"12个月",360},
        };
        if (keyValuePairs.ContainsKey(val))
        {
            Value.SearchDate = new DateTimeRangeValue();
            Value.SearchDate.Start = DateTime.Now.AddDays(-keyValuePairs[val]);
            Value.SearchDate.End = DateTime.Now;
        }
        else
        {
            Value.SearchDate = null;
        }

        return Task.CompletedTask;
    }

    /// <summary>
    ///
    /// </summary>
    [Parameter]
    [NotNull]
    public StandardDataSearchModel? Value { get; set; } = new StandardDataSearchModel();

    [Parameter]
    public List<string> LastedDays { get; set; } = new List<string>()
    {
        "1天","3天","7天","15天","3个月","6个月","12个月","所有"
    };

    [Parameter]
    public string SelectDay { get; set; }

    /// <summary>
    ///
    /// </summary>
    [Parameter]
    public EventCallback<StandardDataSearchModel> ValueChanged { get; set; }

    private void OnClick(MouseEventArgs? args)
    {
        QueryClick.InvokeAsync(Value);
    }

    /// <summary>
    /// 获得/设置 OnClick 事件
    /// </summary>
    [Parameter]
    public EventCallback<StandardDataSearchModel> QueryClick { get; set; }

}
